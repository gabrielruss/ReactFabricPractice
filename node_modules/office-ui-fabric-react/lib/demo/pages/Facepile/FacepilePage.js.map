{"version":3,"sources":["demo/pages/Facepile/FacepilePage.tsx"],"names":[],"mappings":";;;;;;AAAA,6BAA+B;AAC/B,gDAIgC;AAEhC,gFAA6E;AAC7E,4EAAyE;AACzE,kFAA+E;AAC/E,uDAAkE;AAClE,0DAAyD;AAGzD,IAAM,0BAA0B,GAAG,OAAO,CAAC,yCAAyC,CAAW,CAAC;AAChG,IAAM,wBAAwB,GAAG,OAAO,CAAC,uCAAuC,CAAW,CAAC;AAC5F,IAAM,2BAA2B,GAAG,OAAO,CAAC,0CAA0C,CAAW,CAAC;AAElG;IAAkC,gCAA6C;IAG7E;QAAA,YACE,iBAAO,SAER;QADC,KAAI,CAAC,IAAI,GAAG,iCAAqB,CAAC,mBAAQ,EAAE,kBAAkB,EAAE,UAAU,CAAC,CAAC;;IAC9E,CAAC;IAEM,6BAAM,GAAb;QACE,MAAM,CAAC,CACL,oBAAC,qBAAa,IACZ,KAAK,EAAC,UAAU,EAChB,aAAa,EAAC,iBAAiB,EAC/B,YAAY,EACV;gBACE,oBAAC,mBAAW,IAAC,KAAK,EAAC,sBAAsB,EAAC,IAAI,EAAG,wBAAwB;oBACvE,oBAAC,6CAAoB,OAAG,CACZ;gBACd,oBAAC,mBAAW,IAAC,KAAK,EAAC,wBAAwB,EAAC,IAAI,EAAG,2BAA2B;oBAC5E,oBAAC,mDAAuB,OAAG,CACf;gBACd,oBAAC,mBAAW,IAAC,KAAK,EAAC,wBAAwB,EAAC,IAAI,EAAG,0BAA0B;oBAC3E,oBAAC,iDAAsB,OAAG,CACd,CACV,EAER,gBAAgB,EACd,oBAAC,0BAAkB,IAAC,aAAa,EAAC,UAAU,GAAG,EAEjD,QAAQ,EACN;gBACE,wRAEI;gBAEJ,4BAAI,SAAS,EAAC,YAAY,oBAAmB;gBAC7C,oIAEI;gBAEJ,4BAAI,SAAS,EAAC,YAAY,kBAAiB;gBAC3C,8RAEI;gBAEJ,4BAAI,SAAS,EAAC,YAAY,iBAAgB;gBAC1C,wIAEI;gBAEJ,4BAAI,SAAS,EAAC,YAAY,mDAAkD;gBAE5E,6NAEI;gBAEJ,4BAAI,SAAS,EAAC,YAAY,eAAc;gBAExC,oPAEI,CAEA,EAER,aAAa,EACX,gCAAW,EAEb,GAAG,EACD;gBACE;oBACE,oJAA0H;oBAC1H,0FAAgE;oBAChE,qMAA2K,CACxK,CACD,EAER,KAAK,EACH;gBACE;oBACE,oEAA0C;oBAC1C,kJAAwH;oBACxH,8KAA+I,CAC5I,CACD,EAER,OAAO,EACL,2BAAG,IAAI,EAAC,oEAAoE,gBAAc,EAE5F,KAAK,EAAG,IAAI,CAAC,IAAI,EACjB,eAAe,EAAG,IAAI,CAAC,KAAK,CAAC,eAAe,GAC9B,CACjB,CAAC;IACJ,CAAC;IACH,mBAAC;AAAD,CA7FA,AA6FC,CA7FiC,KAAK,CAAC,SAAS,GA6FhD;AA7FY,oCAAY","file":"demo/pages/Facepile/FacepilePage.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  ExampleCard,\r\n  PropertiesTableSet,\r\n  ComponentPage\r\n} from '../../components/index';\r\n\r\nimport { FacepileAddFaceExample } from './examples/Facepile.AddFace.Example';\r\nimport { FacepileBasicExample } from './examples/Facepile.Basic.Example';\r\nimport { FacepileOverflowExample } from './examples/Facepile.Overflow.Example';\r\nimport { getPageRouteFromState } from '../../utilities/pageroute';\r\nimport { AppState } from '../../components/App/AppState';\r\nimport { IComponentDemoPageProps } from '../../components/ComponentPage/IComponentDemoPageProps';\r\n\r\nconst FacepileAddFaceExampleCode = require('./examples/Facepile.AddFace.Example.tsx') as string;\r\nconst FacepileBasicExampleCode = require('./examples/Facepile.Basic.Example.tsx') as string;\r\nconst FacepileOverflowExampleCode = require('./examples/Facepile.Overflow.Example.tsx') as string;\r\n\r\nexport class FacepilePage extends React.Component<IComponentDemoPageProps, any> {\r\n  private _url: string;\r\n\r\n  constructor() {\r\n    super();\r\n    this._url = getPageRouteFromState(AppState, 'Basic components', 'Facepile');\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <ComponentPage\r\n        title='Facepile'\r\n        componentName='FacepileExample'\r\n        exampleCards={\r\n          <div>\r\n            <ExampleCard title='Facepile with Extras' code={ FacepileBasicExampleCode }>\r\n              <FacepileBasicExample />\r\n            </ExampleCard>\r\n            <ExampleCard title='Facepile with Overflow' code={ FacepileOverflowExampleCode }>\r\n              <FacepileOverflowExample />\r\n            </ExampleCard>\r\n            <ExampleCard title='Facepile with Add Face' code={ FacepileAddFaceExampleCode }>\r\n              <FacepileAddFaceExample />\r\n            </ExampleCard>\r\n          </div>\r\n        }\r\n        propertiesTables={\r\n          <PropertiesTableSet componentName='Facepile' />\r\n        }\r\n        overview={\r\n          <div>\r\n            <p>\r\n              The Facepile shows a list of faces or initials in a horizontal lockup. Each circle represents a person. Many times this component is used when sharing who has access to a specific view or file or when assigning a user to a task within a workflow.\r\n            </p>\r\n\r\n            <h2 className='ms-font-xl'>Adding people</h2>\r\n            <p>\r\n              The component can include an add button which can be used for quickly adding a person to the list.\r\n            </p>\r\n\r\n            <h2 className='ms-font-xl'>Empty state</h2>\r\n            <p>\r\n              The empty state of the Facepile should include only an add button. Another variant is to use an input field with placeholder text instructing the user to add a person. See the PeoplePicker component for the menu used to add people to the Facepile list.\r\n            </p>\r\n\r\n            <h2 className='ms-font-xl'>One person</h2>\r\n            <p>\r\n              When there is only one person in the Facepile, consider using their name next to the face or initials.\r\n            </p>\r\n\r\n            <h2 className='ms-font-xl'>Expanding the list when there is no overflow</h2>\r\n\r\n            <p>\r\n              When there is a need to show the Facepile expanded into a vertical list, include a downward chevron button. Clicking or tapping on the chevron would open a standard list view of personas.\r\n            </p>\r\n\r\n            <h2 className='ms-font-xl'>Overflow</h2>\r\n\r\n            <p>\r\n              When the Facepile exceeds a max number of 5 people, show a button at the end of the list indicating how many are not being shown. Clicking or tapping on the overflow would open a standard list view of personas.\r\n            </p>\r\n\r\n          </div>\r\n        }\r\n        bestPractices={\r\n          <div></div>\r\n        }\r\n        dos={\r\n          <div>\r\n            <ul>\r\n              <li>Use if looking for a way to represent who has access to an area and need to show that as a people representation.</li>\r\n              <li>Only show the Add button if a user has access to do so.</li>\r\n              <li>Allow a way for the user to understand who the person is. Many common ways to do this are with a tooltip or adding the ability to open up a PeopleCard Experience.</li>\r\n            </ul>\r\n          </div>\r\n        }\r\n        donts={\r\n          <div>\r\n            <ul>\r\n              <li>Use for things other than people.</li>\r\n              <li>Overwhelm users by listing every single person as a circle but truncate and provide a way to see the full list.</li>\r\n              <li>Donâ€™t use this control for experiences where you need to manage details of hundreds of users, you are better off using a list control.</li>\r\n            </ul>\r\n          </div>\r\n        }\r\n        related={\r\n          <a href='https://dev.office.com/fabric-js/Components/FacePile/FacePile.html'>Fabric JS</a>\r\n        }\r\n        route={ this._url }\r\n        isHeaderVisible={ this.props.isHeaderVisible }>\r\n      </ComponentPage>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}