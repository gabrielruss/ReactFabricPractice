"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var React = require("react");
var index_1 = require("../../../../index");
var ImageMaximizeFrameExample = (function (_super) {
    __extends(ImageMaximizeFrameExample, _super);
    function ImageMaximizeFrameExample() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ImageMaximizeFrameExample.prototype.render = function () {
        var imageProps = {
            src: 'http://placehold.it/500x500',
            imageFit: index_1.ImageFit.cover,
            maximizeFrame: true
        };
        return (React.createElement("div", null,
            React.createElement("p", null, "Where the exact width and height of the image's frame is not known, such as when sizing an image as a percentage of its parent, you can use the \"maximizeFrame\" prop to expand the frame to fill the parent element."),
            React.createElement(index_1.Label, null, "The image is placed within a landscape container."),
            React.createElement("div", { style: { width: '200px', height: '100px' } },
                React.createElement(index_1.Image, __assign({}, imageProps))),
            React.createElement("br", null),
            React.createElement(index_1.Label, null, "The image is placed within a portrait container."),
            React.createElement("div", { style: { width: '100px', height: '200px' } },
                React.createElement(index_1.Image, __assign({}, imageProps)))));
    };
    return ImageMaximizeFrameExample;
}(React.Component));
exports.ImageMaximizeFrameExample = ImageMaximizeFrameExample;

//# sourceMappingURL=Image.MaximizeFrame.Example.js.map
