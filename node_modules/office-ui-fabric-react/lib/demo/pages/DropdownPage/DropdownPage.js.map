{"version":3,"sources":["demo/pages/DropdownPage/DropdownPage.tsx"],"names":[],"mappings":";;;;;;AAAA,6BAA+B;AAC/B,gDAIgC;AAEhC,4EAAyE;AACzE,uDAAkE;AAClE,0DAAyD;AAGzD,IAAM,wBAAwB,GAAG,OAAO,CAAC,uCAAuC,CAAW,CAAC;AAE5F;IAAkC,gCAA6C;IAG7E;QAAA,YACE,iBAAO,SAER;QADC,KAAI,CAAC,IAAI,GAAG,iCAAqB,CAAC,mBAAQ,EAAE,kBAAkB,EAAE,UAAU,CAAC,CAAC;;IAC9E,CAAC;IAEM,6BAAM,GAAb;QACE,MAAM,CAAC,CACL,oBAAC,qBAAa,IACZ,KAAK,EAAC,UAAU,EAChB,aAAa,EAAC,iBAAiB,EAC/B,YAAY,EACV,oBAAC,mBAAW,IAAC,KAAK,EAAC,UAAU,EAAC,IAAI,EAAG,wBAAwB;gBAC3D,oBAAC,6CAAoB,OAAG,CACZ,EAEhB,gBAAgB,EACd,oBAAC,0BAAkB,IAAC,aAAa,EAAC,UAAU,GAAG,EAEjD,QAAQ,EACN;gBACE,keAEI,CACA,EAER,aAAa,EACX,gCAAW,EAEb,GAAG,EACD;gBACE;oBACE,sLAA4J;oBAC5J,mFAAyD;oBACzD,+NAAqM,CAClM,CACD,EAER,KAAK,EACH,gCAAW,EAEb,OAAO,EACL,2BAAG,IAAI,EAAC,oEAAoE,gBAAc,EAE5F,KAAK,EAAG,IAAI,CAAC,IAAI,EACjB,eAAe,EAAG,IAAI,CAAC,KAAK,CAAC,eAAe,GAC9B,CACjB,CAAC;IACJ,CAAC;IACH,mBAAC;AAAD,CAnDA,AAmDC,CAnDiC,KAAK,CAAC,SAAS,GAmDhD;AAnDY,oCAAY","file":"demo/pages/DropdownPage/DropdownPage.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  ExampleCard,\r\n  PropertiesTableSet,\r\n  ComponentPage\r\n} from '../../components/index';\r\n\r\nimport { DropdownBasicExample } from './examples/Dropdown.Basic.Example';\r\nimport { getPageRouteFromState } from '../../utilities/pageroute';\r\nimport { AppState } from '../../components/App/AppState';\r\nimport { IComponentDemoPageProps } from '../../components/ComponentPage/IComponentDemoPageProps';\r\n\r\nconst DropdownBasicExampleCode = require('./examples/Dropdown.Basic.Example.tsx') as string;\r\n\r\nexport class DropdownPage extends React.Component<IComponentDemoPageProps, any> {\r\n  private _url: string;\r\n\r\n  constructor() {\r\n    super();\r\n    this._url = getPageRouteFromState(AppState, 'Basic components', 'Dropdown');\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <ComponentPage\r\n        title='Dropdown'\r\n        componentName='DropdownExample'\r\n        exampleCards={\r\n          <ExampleCard title='Dropdown' code={ DropdownBasicExampleCode }>\r\n            <DropdownBasicExample />\r\n          </ExampleCard>\r\n        }\r\n        propertiesTables={\r\n          <PropertiesTableSet componentName='Dropdown' />\r\n        }\r\n        overview={\r\n          <div>\r\n            <p>\r\n              A Dropdown is a list in which the selected item is always visible, and the others are visible on demand by clicking a drop-down button. They are used to simplify the design and make a choice within the UI. When closed, only the selected item is visible. When users click the drop-down button, all the options become visible. To change the value, users open the list and click another value or use the arrow keys (up and down) to select a new value.\r\n            </p>\r\n          </div>\r\n        }\r\n        bestPractices={\r\n          <div></div>\r\n        }\r\n        dos={\r\n          <div>\r\n            <ul>\r\n              <li>Use a Dropdown when there are multiple choices that can be collapsed under one title. Or if the list of items is long or when space is constrained.</li>\r\n              <li>Dropdowns contain shortened statements or words.</li>\r\n              <li>Use a Dropdown when the selected option is more important than the alternatives (in contrast to radio buttons where all the choices are visible putting more emphasis on the other options).</li>\r\n            </ul>\r\n          </div>\r\n        }\r\n        donts={\r\n          <div></div>\r\n        }\r\n        related={\r\n          <a href='https://dev.office.com/fabric-js/Components/Dropdown/Dropdown.html'>Fabric JS</a>\r\n        }\r\n        route={ this._url }\r\n        isHeaderVisible={ this.props.isHeaderVisible }>\r\n      </ComponentPage>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}