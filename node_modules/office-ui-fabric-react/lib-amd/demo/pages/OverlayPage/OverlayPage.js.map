{"version":3,"sources":["demo/pages/OverlayPage/OverlayPage.tsx"],"names":[],"mappings":";;;;;;;IAaA,IAAM,uBAAuB,GAAG,OAAO,CAAC,sCAAsC,CAAW,CAAC;IAC1F,IAAM,sBAAsB,GAAG,OAAO,CAAC,qCAAqC,CAAW,CAAC;IAExF;QAAiC,+BAA6C;QAG5E;YAAA,YACE,iBAAO,SAER;YADC,KAAI,CAAC,IAAI,GAAG,iCAAqB,CAAC,mBAAQ,EAAE,kBAAkB,EAAE,SAAS,CAAC,CAAC;;QAC7E,CAAC;QAEM,4BAAM,GAAb;YACE,MAAM,CAAC,CACL,oBAAC,qBAAa,IACZ,KAAK,EAAC,SAAS,EACf,aAAa,EAAC,gBAAgB,EAC9B,YAAY,EACV;oBACE,oBAAC,mBAAW,IAAC,KAAK,EAAC,OAAO,EAAC,IAAI,EAAG,uBAAuB;wBACvD,oBAAC,2CAAmB,OAAG,CACX;oBACd,oBAAC,mBAAW,IAAC,KAAK,EAAC,MAAM,EAAC,IAAI,EAAG,sBAAsB;wBACrD,oBAAC,yCAAkB,OAAG,CACV,CACV,EAER,gBAAgB,EACd,oBAAC,0BAAkB,IAAC,aAAa,EAAC,SAAS,GAAG,EAEhD,QAAQ,EACN;oBACE,gUAEI,CACA,EAER,aAAa,EACX,gCAAW,EAEb,GAAG,EACD;oBACE;wBACE,kFAAwD;wBACxD,8EAAoD,CACjD,CACD,EAER,KAAK,EACH;oBACE;wBACE,uHAA6F,CAC1F,CACD,EAER,OAAO,EACL,2BAAG,IAAI,EAAC,kEAAkE,gBAAc,EAE1F,KAAK,EAAG,IAAI,CAAC,IAAI,EACjB,eAAe,EAAG,IAAI,CAAC,KAAK,CAAC,eAAe,GAC9B,CACjB,CAAC;QACJ,CAAC;QAEH,kBAAC;IAAD,CA5DA,AA4DC,CA5DgC,KAAK,CAAC,SAAS,GA4D/C;IA5DY,kCAAW","file":"demo/pages/OverlayPage/OverlayPage.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  ExampleCard,\r\n  PropertiesTableSet,\r\n  ComponentPage\r\n} from '../../components/index';\r\n\r\nimport { AppState } from '../../components/App/AppState';\r\nimport { getPageRouteFromState } from '../../utilities/pageroute';\r\nimport { IComponentDemoPageProps } from '../../components/ComponentPage/IComponentDemoPageProps';\r\nimport { OverlayDarkExample } from './examples/Overlay.Dark.Example';\r\nimport { OverlayLightExample } from './examples/Overlay.Light.Example';\r\n\r\nconst OverlayLightExampleCode = require('./examples/Overlay.Light.Example.tsx') as string;\r\nconst OverlayDarkExampleCode = require('./examples/Overlay.Dark.Example.tsx') as string;\r\n\r\nexport class OverlayPage extends React.Component<IComponentDemoPageProps, any> {\r\n  private _url: string;\r\n\r\n  constructor() {\r\n    super();\r\n    this._url = getPageRouteFromState(AppState, 'Basic components', 'Overlay');\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <ComponentPage\r\n        title='Overlay'\r\n        componentName='OverlayExample'\r\n        exampleCards={\r\n          <div>\r\n            <ExampleCard title='Light' code={ OverlayLightExampleCode }>\r\n              <OverlayLightExample />\r\n            </ExampleCard>\r\n            <ExampleCard title='Dark' code={ OverlayDarkExampleCode }>\r\n              <OverlayDarkExample />\r\n            </ExampleCard>\r\n          </div>\r\n        }\r\n        propertiesTables={\r\n          <PropertiesTableSet componentName='Overlay' />\r\n        }\r\n        overview={\r\n          <div>\r\n            <p>\r\n              Overlays are used to render a semi-transparent layer on top of existing UI. Overlays help focus the user on the content that sits above the added layer and are often used to help designate a modal or blocking experience. Overlays can be seen used in conjunction with Panels and Dialogs.\r\n            </p>\r\n          </div>\r\n        }\r\n        bestPractices={\r\n          <div></div>\r\n        }\r\n        dos={\r\n          <div>\r\n            <ul>\r\n              <li>Use a dark Overlay with a first-run experience.</li>\r\n              <li>Use a white Overlay for dialogs and panels.</li>\r\n            </ul>\r\n          </div>\r\n        }\r\n        donts={\r\n          <div>\r\n            <ul>\r\n              <li>Use an Overlay when you want the user to interact with the UI that is being covered.</li>\r\n            </ul>\r\n          </div>\r\n        }\r\n        related={\r\n          <a href='https://dev.office.com/fabric-js/Components/Overlay/Overlay.html'>Fabric JS</a>\r\n        }\r\n        route={ this._url }\r\n        isHeaderVisible={ this.props.isHeaderVisible }>\r\n      </ComponentPage>\r\n    );\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}