{"version":3,"sources":["demo/pages/IconPage/IconPage.tsx"],"names":[],"mappings":";;;;;;;IAcA,IAAM,oBAAoB,GAAG,OAAO,CAAC,mCAAmC,CAAW,CAAC;IACpF,IAAM,oBAAoB,GAAG,OAAO,CAAC,mCAAmC,CAAW,CAAC;IACpF,IAAM,yBAAyB,GAAG,OAAO,CAAC,wCAAwC,CAAW,CAAC;IAE9F;QAA8B,4BAA6C;QAGzE;YAAA,YACE,iBAAO,SAER;YADC,KAAI,CAAC,IAAI,GAAG,iCAAqB,CAAC,mBAAQ,EAAE,kBAAkB,EAAE,MAAM,CAAC,CAAC;;QAC1E,CAAC;QAEM,yBAAM,GAAb;YACE,MAAM,CAAC,CACL,oBAAC,qBAAa,IACZ,KAAK,EAAC,MAAM,EACZ,aAAa,EAAC,aAAa,EAC3B,YAAY,EACV;oBACE,oBAAC,mBAAW,IAAC,KAAK,EAAC,MAAM,EAAC,IAAI,EAAG,oBAAoB;wBACnD,oBAAC,qCAAgB,OAAG,CACR;oBACd,oBAAC,mBAAW,IAAC,KAAK,EAAC,wBAAwB,EAAC,IAAI,EAAG,oBAAoB;wBACrE,oBAAC,qCAAgB,OAAG,CACR;oBACd,oBAAC,mBAAW,IAAC,KAAK,EAAC,wBAAwB,EAAC,IAAI,EAAG,yBAAyB;wBAC1E,oBAAC,+CAAqB,OAAG,CACb,CACV,EAER,gBAAgB,EACd,oBAAC,0BAAkB,IAAC,aAAa,EAAC,MAAM,GAAG,EAE7C,QAAQ,EACN;oBACE,uTAEI,CACA,EAER,aAAa,EACX,gCAAW,EAEb,GAAG,EACD;oBACE;wBACE,kHAAwF;wBACxF,yDAA+B,CAC5B,CACD,EAER,KAAK,EACH;oBACE;wBACE,8DAAoC;wBACpC,yEAA+C,CAC5C,CACD,EAER,KAAK,EAAG,IAAI,CAAC,IAAI,EACjB,eAAe,EAAG,IAAI,CAAC,KAAK,CAAC,eAAe,GAC9B,CACjB,CAAC;QACJ,CAAC;QACH,eAAC;IAAD,CA5DA,AA4DC,CA5D6B,KAAK,CAAC,SAAS,GA4D5C;IA5DY,4BAAQ","file":"demo/pages/IconPage/IconPage.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  ExampleCard,\r\n  PropertiesTableSet,\r\n  ComponentPage\r\n} from '../../components/index';\r\n\r\nimport { IconBasicExample } from './examples/Icon.Basic.Example';\r\nimport { IconColorExample } from './examples/Icon.Color.Example';\r\nimport { IconImageSheetExample } from './examples/Icon.ImageSheet.Example';\r\nimport { getPageRouteFromState } from '../../utilities/pageroute';\r\nimport { AppState } from '../../components/App/AppState';\r\nimport { IComponentDemoPageProps } from '../../components/ComponentPage/IComponentDemoPageProps';\r\n\r\nconst IconBasicExampleCode = require('./examples/Icon.Basic.Example.tsx') as string;\r\nconst IconColorExampleCode = require('./examples/Icon.Color.Example.tsx') as string;\r\nconst IconImageSheetExampleCode = require('./examples/Icon.ImageSheet.Example.tsx') as string;\r\n\r\nexport class IconPage extends React.Component<IComponentDemoPageProps, any> {\r\n  private _url: string;\r\n\r\n  constructor() {\r\n    super();\r\n    this._url = getPageRouteFromState(AppState, 'Basic components', 'Icon');\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <ComponentPage\r\n        title='Icon'\r\n        componentName='IconExample'\r\n        exampleCards={\r\n          <div>\r\n            <ExampleCard title='Icon' code={ IconBasicExampleCode }>\r\n              <IconBasicExample />\r\n            </ExampleCard>\r\n            <ExampleCard title='Icon with custom color' code={ IconColorExampleCode }>\r\n              <IconColorExample />\r\n            </ExampleCard>\r\n            <ExampleCard title='Icon using image sheet' code={ IconImageSheetExampleCode }>\r\n              <IconImageSheetExample />\r\n            </ExampleCard>\r\n          </div>\r\n        }\r\n        propertiesTables={\r\n          <PropertiesTableSet componentName='Icon' />\r\n        }\r\n        overview={\r\n          <div>\r\n            <p>\r\n              In a computer's graphical user interface ( GUI ), an icon is an image that represents an application, a capability, or some other concept or specific entity with meaning for the user. An icon is usually selectable but can also be a nonselectable image such as a company's logo.\r\n            </p>\r\n          </div>\r\n        }\r\n        bestPractices={\r\n          <div></div>\r\n        }\r\n        dos={\r\n          <div>\r\n            <ul>\r\n              <li>Adjust to proper size to highlight importance but not occupying too much space.</li>\r\n              <li>Be simple and concise.</li>\r\n            </ul>\r\n          </div>\r\n        }\r\n        donts={\r\n          <div>\r\n            <ul>\r\n              <li>Use Icons to show pictures.</li>\r\n              <li>Use photos or long sentences as icons.</li>\r\n            </ul>\r\n          </div>\r\n        }\r\n        route={ this._url }\r\n        isHeaderVisible={ this.props.isHeaderVisible }>\r\n      </ComponentPage>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}