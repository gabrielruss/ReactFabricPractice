{"version":3,"sources":["demo/pages/DatePickerPage/DatePickerPage.tsx"],"names":[],"mappings":";;;;;;;IAcA,IAAM,0BAA0B,GAAG,OAAO,CAAC,yCAAyC,CAAW,CAAC;IAChG,IAAM,6BAA6B,GAAG,OAAO,CAAC,4CAA4C,CAAW,CAAC;IACtG,IAAM,0BAA0B,GAAG,OAAO,CAAC,yCAAyC,CAAW,CAAC;IAEhG;QAAoC,kCAA6C;QAG/E;YAAA,YACE,iBAAO,SAER;YADC,KAAI,CAAC,IAAI,GAAG,iCAAqB,CAAC,mBAAQ,EAAE,kBAAkB,EAAE,YAAY,CAAC,CAAC;;QAChF,CAAC;QACM,+BAAM,GAAb;YACE,MAAM,CAAC,CACL,oBAAC,qBAAa,IACZ,KAAK,EAAC,YAAY,EAClB,aAAa,EAAC,mBAAmB,EACjC,YAAY,EACV;oBACE,oBAAC,mBAAW,IAAC,KAAK,EAAC,YAAY,EAAC,IAAI,EAAG,0BAA0B;wBAC/D,oBAAC,iDAAsB,OAAG,CACd;oBACd,oBAAC,mBAAW,IAAC,KAAK,EAAC,8BAA8B,EAAC,IAAI,EAAG,6BAA6B;wBACpF,oBAAC,uDAAyB,OAAG,CACjB;oBACd,oBAAC,mBAAW,IAAC,KAAK,EAAC,qCAAqC,EAAC,IAAI,EAAG,0BAA0B;wBACxF,oBAAC,iDAAsB,OAAG,CACd,CACV,EAER,gBAAgB,EACd,oBAAC,0BAAkB,IAAC,aAAa,EAAC,YAAY,GAAG,EAEnD,QAAQ,EACN;oBACE,+FAEI,CACA,EAER,aAAa,EACX,gCAAW,EAEb,GAAG,EACD;oBACE;wBACE,sEAA4C;wBAC5C,6JAAmI;wBACnI,oKAA0I;wBAC1I,yMAA0K;wBAC1K,sKAA4I,CACzI,CACD,EAER,KAAK,EACH;oBACE;wBACE,yKAA+I;wBAC/I,wFAA8D;wBAC9D,+GAAqF;wBACrF,yHAA+F,CAC5F,CACD,EAER,OAAO,EACL,2BAAG,IAAI,EAAC,wEAAwE,gBAAc,EAEhG,KAAK,EAAG,IAAI,CAAC,IAAI,EACjB,eAAe,EAAG,IAAI,CAAC,KAAK,CAAC,eAAe,GAC9B,CACjB,CAAC;QACJ,CAAC;QAEH,qBAAC;IAAD,CApEA,AAoEC,CApEmC,KAAK,CAAC,SAAS,GAoElD;IApEY,wCAAc","file":"demo/pages/DatePickerPage/DatePickerPage.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  ExampleCard,\r\n  PropertiesTableSet,\r\n  ComponentPage\r\n} from '../../components/index';\r\n\r\nimport { DatePickerBasicExample } from './examples/DatePicker.Basic.Example';\r\nimport { DatePickerRequiredExample } from './examples/DatePicker.Required.Example';\r\nimport { DatePickerInputExample } from './examples/DatePicker.Input.Example';\r\nimport { getPageRouteFromState } from '../../utilities/pageroute';\r\nimport { AppState } from '../../components/App/AppState';\r\nimport { IComponentDemoPageProps } from '../../components/ComponentPage/IComponentDemoPageProps';\r\n\r\nconst DatePickerBasicExampleCode = require('./examples/DatePicker.Basic.Example.tsx') as string;\r\nconst DatePickerRequiredExampleCode = require('./examples/DatePicker.Required.Example.tsx') as string;\r\nconst DatePickerInputExampleCode = require('./examples/DatePicker.Input.Example.tsx') as string;\r\n\r\nexport class DatePickerPage extends React.Component<IComponentDemoPageProps, any> {\r\n  private _url: string;\r\n\r\n  constructor() {\r\n    super();\r\n    this._url = getPageRouteFromState(AppState, 'Basic components', 'DatePicker');\r\n  }\r\n  public render() {\r\n    return (\r\n      <ComponentPage\r\n        title='DatePicker'\r\n        componentName='DatePickerExample'\r\n        exampleCards={\r\n          <div>\r\n            <ExampleCard title='DatePicker' code={ DatePickerBasicExampleCode }>\r\n              <DatePickerBasicExample />\r\n            </ExampleCard>\r\n            <ExampleCard title='DatePicker as required field' code={ DatePickerRequiredExampleCode }>\r\n              <DatePickerRequiredExample />\r\n            </ExampleCard>\r\n            <ExampleCard title='DatePicker allows input date string' code={ DatePickerInputExampleCode }>\r\n              <DatePickerInputExample />\r\n            </ExampleCard>\r\n          </div>\r\n        }\r\n        propertiesTables={\r\n          <PropertiesTableSet componentName='DatePicker' />\r\n        }\r\n        overview={\r\n          <div>\r\n            <p>\r\n              The DatePicker component enables a user to pick a date value.\r\n            </p>\r\n          </div>\r\n        }\r\n        bestPractices={\r\n          <div></div>\r\n        }\r\n        dos={\r\n          <div>\r\n            <ul>\r\n              <li>Use the control as a single entity.</li>\r\n              <li>Set the default date to the current date unless a specific date is required for context (e.g. the date of the conference).</li>\r\n              <li>The control is designed to resize relative to available screen width. Allow it to render in either wide or narrow as appropriate.</li>\r\n              <li>When the control is engaged, the DatePicker renders as a flyout and has defined widths (300px -narrow and 440px â€“ wide). Plan your UI implementation accordingly.</li>\r\n              <li>The control renders date in a specific format. If allowing for manual entry of date, provide helper text in the appropriate format.</li>\r\n            </ul>\r\n          </div>\r\n        }\r\n        donts={\r\n          <div>\r\n            <ul>\r\n              <li>Don't attempt to break apart year from month/day selectors. If granularity is required, use the Dropdown control or something similar.</li>\r\n              <li>Don't attempt to force resize the control in any way.</li>\r\n              <li>Don't force the control to render one mode vs. the other (year or month/day)</li>\r\n              <li>The flyout selector is a light dismiss control. Don't modify this behavior in any way.</li>\r\n            </ul>\r\n          </div>\r\n        }\r\n        related={\r\n          <a href='https://dev.office.com/fabric-js/Components/DatePicker/DatePicker.html'>Fabric JS</a>\r\n        }\r\n        route={ this._url }\r\n        isHeaderVisible={ this.props.isHeaderVisible }>\r\n      </ComponentPage>\r\n    );\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}